# Generated by Django 3.0.1 on 2020-01-18 08:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='problems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('statement', models.CharField(max_length=500, verbose_name='Problem Statement')),
                ('Category', models.CharField(choices=[('Machine Learning', 'Machine Learning'), ('IOT', 'IOT'), ('Web Development', 'Web Development'), ('App Developement', 'App Development')], default='Machine Learning', max_length=30, verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Team Name')),
                ('size', models.PositiveSmallIntegerField(default=4, help_text='No. of player in a team', validators=[django.core.validators.MaxValueValidator(4)], verbose_name='Team Size')),
                ('leader_name', models.CharField(max_length=50, verbose_name='Team Leader name')),
                ('leader_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 12 digits allowed.", regex='^\\+?1?\\d{9,12}$')])),
                ('leader_email', models.EmailField(max_length=254)),
                ('mate2_name', models.CharField(blank=True, max_length=50, verbose_name='Team Leader name')),
                ('mate2_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 12 digits allowed.", regex='^\\+?1?\\d{9,12}$')])),
                ('mate2_email', models.EmailField(blank=True, max_length=254)),
                ('mate3_name', models.CharField(blank=True, max_length=50, verbose_name='Team Leader name')),
                ('mate3_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 12 digits allowed.", regex='^\\+?1?\\d{9,12}$')])),
                ('mate3_email', models.EmailField(blank=True, max_length=254)),
                ('mate4_name', models.CharField(blank=True, max_length=50, verbose_name='Team Leader name')),
                ('mate4_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 12 digits allowed.", regex='^\\+?1?\\d{9,12}$')])),
                ('mate4_email', models.EmailField(blank=True, max_length=254)),
                ('solution1', models.CharField(help_text='How will you solve it', max_length=500, verbose_name='Solution')),
                ('solution2', models.CharField(help_text='How will you solve it', max_length=500, verbose_name='Solution')),
                ('solution3', models.CharField(help_text='How will you solve it', max_length=500, verbose_name='Solution')),
                ('problem1_selected', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ps1', to='Hackathon.problems', verbose_name='Selected problem statement 1')),
                ('problem2_selected', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ps2', to='Hackathon.problems', verbose_name='Selected problem statement 1')),
                ('problem3_selected', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ps3', to='Hackathon.problems', verbose_name='Selected problem statement 1')),
            ],
        ),
    ]
