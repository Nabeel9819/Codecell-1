# Generated by Django 2.2.5 on 2019-09-22 07:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Quiz', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='category',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='Images/Categories/', verbose_name='Image'),
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Quiz description', verbose_name='Description')),
                ('url', models.SlugField(help_text='A user friendly url', max_length=60, verbose_name='User Friendly Url')),
                ('random_order', models.BooleanField(default=True, help_text='Display the questions in Random Order ?', verbose_name='Random Order')),
                ('max_questions', models.PositiveIntegerField(blank=True, help_text='Number of questions to be displayed on each attempt', null=True, verbose_name='Max_questions')),
                ('single_attempt', models.BooleanField(default=False, help_text='If selected, user will be allowed only one attempt for this quiz', verbose_name='Single Attempt')),
                ('pass_mark', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Percentage required to pass', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Passing Marks')),
                ('success_text', models.TextField(blank=True, help_text='Displayed if user passes.', verbose_name='Success Text')),
                ('fail_text', models.TextField(blank=True, help_text='Displayed if user fails', verbose_name='Fail Text')),
                ('draft', models.BooleanField(blank=True, default=False, help_text="Quiz won't be available to student if this is selected, only for internal assessment this quiz will be available", verbose_name='Draft')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Quiz.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figure', models.ImageField(blank=True, null=True, upload_to='Images/Questions/', verbose_name='Question Image')),
                ('content', models.CharField(help_text='Enter the Question (text)', max_length=1000, verbose_name='Question')),
                ('explanation', models.TextField(blank=True, help_text='Explanation to be shown after the question is answered ', max_length=2000, verbose_name='Explanation')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Quiz.Category', verbose_name='Category')),
                ('quiz', models.ManyToManyField(blank=True, to='Quiz.Quiz', verbose_name='Quiz')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Quiz.SubCategory', verbose_name='Sub-Category')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['category'],
            },
        ),
    ]
